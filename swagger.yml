consumes:
- application/io.goswagger.examples.todo-list.v1+json
info:
  description: From the todo list tutorial on goswagger.io
  title: Taimme-Chat
  version: 1.0.0
produces:
- application/io.goswagger.examples.todo-list.v1+json
schemes:
- https
swagger: "2.0"

paths:
  /auth:
    post:
      tags: 
      - "auth"
      summary: "ログイン"
      description: "サインアップもしくはアクセストークンの更新を行います"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - in: "query"
          description: "他のユーザーから見えないユーザーを特定するハッシュ値です。パスワードのように扱われます。アクセストークンの取得に使用します。"
          required: true
          name: "authToken"
          type: "string"
        - in: "query"
          description: "apiサーバー等から払い出されるハッシュ値です。他のユーザーから見えても大丈夫で、推測が難しいものが望ましいです。これでユーザーは一意に特定されるのでuniqである必要もあります。"
          required: true
          name: "userHash"
          type: "string"
      responses:
        200:
          $ref: "#/definitions/authInfo"
        403:
          $ref: "#/definitions/error"

  /chatrooms/{id}:
    get:
      tags:
        - "chatRooms"
      security: 
        - api_key: []
      parameters: 
        - in: path
          name: id
          type: string
          required: true
          description: 長いハッシュ値
      summary: "メッセージの一覧が取ってこれるよ"
      description: "一覧が頑張るよ"
      responses:
        200:
          $ref: "#/definitions/chatroomFull"
          
  /chatrooms/{id}/messages:
    parameters: 
      - in: path
        name: id
        type: string
        required: true
        description: 長いハッシュ値
    post:
      security: 
        - api_key: []
      tags:
        - "chatRooms"
      parameters: 
        - in: body
          name: body
          schema:
            $ref: '#/definitions/chatCreate'
      summary: "メッセージの投稿"
      responses:
        200:
          $ref: "#/definitions/chatroomFull"
    get: 
      security: 
        - api_key: []
      tags:
        - "chatRooms"
      summary: メッセージの取得
      description: "ok"
      responses:
        200:
          description: ok
          schema:
            type: array
            items:
              $ref: '#/definitions/chat'
              
  /chatrooms:
    post:
      tags:
        - "chatRooms"
      summary: "メッセージの一覧が取ってこれるよ"
      description: "一覧が頑張るよ"
      produces:
      - "application/json"
      parameters: 
        - in: body
          name: body
          schema:
            $ref: '#/definitions/chatroomRequest'
      responses:
        200:
          description: ok
          schema:
            type: array
            items:
              $ref: '#/definitions/chatroom'
      security: 
      - api_key: []

      

securityDefinitions:
 api_key:
  type: "apiKey"
  name: "x_chat_access_token"
  in: "header"
          
definitions:
  authInfo:
    type: "object"
    description: "認証認可用のオブジェクト、x_chat_access_tokenのヘッダに入れて使用します。"
    properties:
      accessToken:
        type: "string"
        example: "HAB4cQxKTQkEj7rMdE6QQW391ffpVbQshya+R66OIhfu5drm"
  user:
    type: "object"
    description: "汎用的に出てくるユーザーオブジェクト"
    properties:
      hash:
        type: string
        example: "HAB4cQxKTQkEj7rMdE6QQW391ffpVbQshya+R66OIhfu5drm"
      name:
        type: string
        example: "kameike"
  chat: 
    type: object
    description: "チャットに使われるやつ"
    properties:
      id: 
        type: integer
      timestamp:
        type: integer
        format: int64
      text:
        type: string
        example: "よろしくお願いします"
      user:
        $ref: "#/definitions/user"
        
  chatCreate:
    type: object
    properties:
      message:
        type: string
  
  chatroomRequest:
    type: object
    properties:
      request:
        type: string
        
  chatroomFull:
    type: object
    description: "チャットルームを完全に取得する際にでてくるやつ"
    properties:
      chatroom:
        $ref: '#/definitions/chatroom'
      chats:
        type: array
        items:
          $ref: '#/definitions/chat'
  
  chatroom:
    type: object
    description: "チャットルームを取得するときに出てくるやつ"
    properties:
      id:
        type: string
      participants:
        type: array
        items:
          $ref: "#/definitions/user"
      unreads:
        type: array
        items:
          type: object
          properties:
            userHash: 
              type: string
            unreadCount:
              type: integer
      peekedChat:
        description: "最大3件メッセージがあればpeekします。"
        type: array
        items:
          $ref: '#/definitions/chat'

  error: 
    type: "object"
    properties:
      errorMessage:
        type: "string"
        description: "エラーメッセージ、中身をユーザーに見せて差し支えないものです。"
        example: "権限がありません(code: 3)"

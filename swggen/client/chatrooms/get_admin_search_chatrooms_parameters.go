// Code generated by go-swagger; DO NOT EDIT.

package chatrooms

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetAdminSearchChatroomsParams creates a new GetAdminSearchChatroomsParams object
// with the default values initialized.
func NewGetAdminSearchChatroomsParams() *GetAdminSearchChatroomsParams {
	var ()
	return &GetAdminSearchChatroomsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetAdminSearchChatroomsParamsWithTimeout creates a new GetAdminSearchChatroomsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetAdminSearchChatroomsParamsWithTimeout(timeout time.Duration) *GetAdminSearchChatroomsParams {
	var ()
	return &GetAdminSearchChatroomsParams{

		timeout: timeout,
	}
}

// NewGetAdminSearchChatroomsParamsWithContext creates a new GetAdminSearchChatroomsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetAdminSearchChatroomsParamsWithContext(ctx context.Context) *GetAdminSearchChatroomsParams {
	var ()
	return &GetAdminSearchChatroomsParams{

		Context: ctx,
	}
}

// NewGetAdminSearchChatroomsParamsWithHTTPClient creates a new GetAdminSearchChatroomsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetAdminSearchChatroomsParamsWithHTTPClient(client *http.Client) *GetAdminSearchChatroomsParams {
	var ()
	return &GetAdminSearchChatroomsParams{
		HTTPClient: client,
	}
}

/*GetAdminSearchChatroomsParams contains all the parameters to send to the API endpoint
for the get admin search chatrooms operation typically these are written to a http.Request
*/
type GetAdminSearchChatroomsParams struct {

	/*AccountHash*/
	AccountHash *string
	/*ChannelName*/
	ChannelName *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get admin search chatrooms params
func (o *GetAdminSearchChatroomsParams) WithTimeout(timeout time.Duration) *GetAdminSearchChatroomsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get admin search chatrooms params
func (o *GetAdminSearchChatroomsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get admin search chatrooms params
func (o *GetAdminSearchChatroomsParams) WithContext(ctx context.Context) *GetAdminSearchChatroomsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get admin search chatrooms params
func (o *GetAdminSearchChatroomsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get admin search chatrooms params
func (o *GetAdminSearchChatroomsParams) WithHTTPClient(client *http.Client) *GetAdminSearchChatroomsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get admin search chatrooms params
func (o *GetAdminSearchChatroomsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccountHash adds the accountHash to the get admin search chatrooms params
func (o *GetAdminSearchChatroomsParams) WithAccountHash(accountHash *string) *GetAdminSearchChatroomsParams {
	o.SetAccountHash(accountHash)
	return o
}

// SetAccountHash adds the accountHash to the get admin search chatrooms params
func (o *GetAdminSearchChatroomsParams) SetAccountHash(accountHash *string) {
	o.AccountHash = accountHash
}

// WithChannelName adds the channelName to the get admin search chatrooms params
func (o *GetAdminSearchChatroomsParams) WithChannelName(channelName *string) *GetAdminSearchChatroomsParams {
	o.SetChannelName(channelName)
	return o
}

// SetChannelName adds the channelName to the get admin search chatrooms params
func (o *GetAdminSearchChatroomsParams) SetChannelName(channelName *string) {
	o.ChannelName = channelName
}

// WriteToRequest writes these params to a swagger request
func (o *GetAdminSearchChatroomsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AccountHash != nil {

		// query param accountHash
		var qrAccountHash string
		if o.AccountHash != nil {
			qrAccountHash = *o.AccountHash
		}
		qAccountHash := qrAccountHash
		if qAccountHash != "" {
			if err := r.SetQueryParam("accountHash", qAccountHash); err != nil {
				return err
			}
		}

	}

	if o.ChannelName != nil {

		// query param channelName
		var qrChannelName string
		if o.ChannelName != nil {
			qrChannelName = *o.ChannelName
		}
		qChannelName := qrChannelName
		if qChannelName != "" {
			if err := r.SetQueryParam("channelName", qChannelName); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

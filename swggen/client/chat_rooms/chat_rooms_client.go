// Code generated by go-swagger; DO NOT EDIT.

package chat_rooms

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new chat rooms API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for chat rooms API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
GetChatroomsID メッセージの一覧が取ってこれるよs

一覧が頑張るよ
*/
func (a *Client) GetChatroomsID(params *GetChatroomsIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetChatroomsIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetChatroomsIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetChatroomsID",
		Method:             "GET",
		PathPattern:        "/chatrooms/{id}",
		ProducesMediaTypes: []string{"application/io.goswagger.examples.todo-list.v1+json"},
		ConsumesMediaTypes: []string{"application/io.goswagger.examples.todo-list.v1+json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetChatroomsIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetChatroomsIDOK), nil

}

/*
GetChatroomsIDMessages メッセージの取得s

ok
*/
func (a *Client) GetChatroomsIDMessages(params *GetChatroomsIDMessagesParams, authInfo runtime.ClientAuthInfoWriter) (*GetChatroomsIDMessagesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetChatroomsIDMessagesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetChatroomsIDMessages",
		Method:             "GET",
		PathPattern:        "/chatrooms/{id}/messages",
		ProducesMediaTypes: []string{"application/io.goswagger.examples.todo-list.v1+json"},
		ConsumesMediaTypes: []string{"application/io.goswagger.examples.todo-list.v1+json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetChatroomsIDMessagesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetChatroomsIDMessagesOK), nil

}

/*
PostChatrooms チャットルームの一覧が取ってこれるよs

一覧が出るよ
*/
func (a *Client) PostChatrooms(params *PostChatroomsParams, authInfo runtime.ClientAuthInfoWriter) (*PostChatroomsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostChatroomsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostChatrooms",
		Method:             "POST",
		PathPattern:        "/chatrooms",
		ProducesMediaTypes: []string{"application/io.goswagger.examples.todo-list.v1+json"},
		ConsumesMediaTypes: []string{"application/io.goswagger.examples.todo-list.v1+json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostChatroomsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*PostChatroomsOK), nil

}

/*
PostChatroomsIDMessages メッセージの投稿s
*/
func (a *Client) PostChatroomsIDMessages(params *PostChatroomsIDMessagesParams, authInfo runtime.ClientAuthInfoWriter) (*PostChatroomsIDMessagesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostChatroomsIDMessagesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostChatroomsIDMessages",
		Method:             "POST",
		PathPattern:        "/chatrooms/{id}/messages",
		ProducesMediaTypes: []string{"application/io.goswagger.examples.todo-list.v1+json"},
		ConsumesMediaTypes: []string{"application/io.goswagger.examples.todo-list.v1+json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostChatroomsIDMessagesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*PostChatroomsIDMessagesOK), nil

}

/*
PostChatroomsIDRead post chatrooms ID read API
*/
func (a *Client) PostChatroomsIDRead(params *PostChatroomsIDReadParams, authInfo runtime.ClientAuthInfoWriter) (*PostChatroomsIDReadOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostChatroomsIDReadParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostChatroomsIDRead",
		Method:             "POST",
		PathPattern:        "/chatrooms/{id}/read",
		ProducesMediaTypes: []string{"application/io.goswagger.examples.todo-list.v1+json"},
		ConsumesMediaTypes: []string{"application/io.goswagger.examples.todo-list.v1+json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostChatroomsIDReadReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*PostChatroomsIDReadOK), nil

}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}

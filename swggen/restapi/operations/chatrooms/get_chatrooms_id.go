// Code generated by go-swagger; DO NOT EDIT.

package chatrooms

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetChatroomsIDHandlerFunc turns a function with the right signature into a get chatrooms ID handler
type GetChatroomsIDHandlerFunc func(GetChatroomsIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetChatroomsIDHandlerFunc) Handle(params GetChatroomsIDParams) middleware.Responder {
	return fn(params)
}

// GetChatroomsIDHandler interface for that can handle valid get chatrooms ID params
type GetChatroomsIDHandler interface {
	Handle(GetChatroomsIDParams) middleware.Responder
}

// NewGetChatroomsID creates a new http.Handler for the get chatrooms ID operation
func NewGetChatroomsID(ctx *middleware.Context, handler GetChatroomsIDHandler) *GetChatroomsID {
	return &GetChatroomsID{Context: ctx, Handler: handler}
}

/*GetChatroomsID swagger:route GET /chatrooms/{id} chatrooms getChatroomsId

メッセージの一覧が取ってこれるよ

一覧が頑張るよ

*/
type GetChatroomsID struct {
	Context *middleware.Context
	Handler GetChatroomsIDHandler
}

func (o *GetChatroomsID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetChatroomsIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

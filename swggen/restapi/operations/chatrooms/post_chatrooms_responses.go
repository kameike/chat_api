// Code generated by go-swagger; DO NOT EDIT.

package chatrooms

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	apimodel "github.com/kameike/chat_api/swggen/apimodel"
)

// PostChatroomsOKCode is the HTTP code returned for type PostChatroomsOK
const PostChatroomsOKCode int = 200

/*PostChatroomsOK ok

swagger:response postChatroomsOK
*/
type PostChatroomsOK struct {

	/*
	  In: Body
	*/
	Payload *PostChatroomsOKBody `json:"body,omitempty"`
}

// NewPostChatroomsOK creates PostChatroomsOK with default headers values
func NewPostChatroomsOK() *PostChatroomsOK {

	return &PostChatroomsOK{}
}

// WithPayload adds the payload to the post chatrooms o k response
func (o *PostChatroomsOK) WithPayload(payload *PostChatroomsOKBody) *PostChatroomsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post chatrooms o k response
func (o *PostChatroomsOK) SetPayload(payload *PostChatroomsOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostChatroomsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostChatroomsForbiddenCode is the HTTP code returned for type PostChatroomsForbidden
const PostChatroomsForbiddenCode int = 403

/*PostChatroomsForbidden error

swagger:response postChatroomsForbidden
*/
type PostChatroomsForbidden struct {

	/*
	  In: Body
	*/
	Payload *apimodel.Error `json:"body,omitempty"`
}

// NewPostChatroomsForbidden creates PostChatroomsForbidden with default headers values
func NewPostChatroomsForbidden() *PostChatroomsForbidden {

	return &PostChatroomsForbidden{}
}

// WithPayload adds the payload to the post chatrooms forbidden response
func (o *PostChatroomsForbidden) WithPayload(payload *apimodel.Error) *PostChatroomsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post chatrooms forbidden response
func (o *PostChatroomsForbidden) SetPayload(payload *apimodel.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostChatroomsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

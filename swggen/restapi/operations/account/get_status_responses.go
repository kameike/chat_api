// Code generated by go-swagger; DO NOT EDIT.

package account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	apimodel "github.com/kameike/chat_api/swggen/apimodel"
)

// GetStatusOKCode is the HTTP code returned for type GetStatusOK
const GetStatusOKCode int = 200

/*GetStatusOK ok

swagger:response getStatusOK
*/
type GetStatusOK struct {

	/*
	  In: Body
	*/
	Payload *apimodel.UserStatus `json:"body,omitempty"`
}

// NewGetStatusOK creates GetStatusOK with default headers values
func NewGetStatusOK() *GetStatusOK {

	return &GetStatusOK{}
}

// WithPayload adds the payload to the get status o k response
func (o *GetStatusOK) WithPayload(payload *apimodel.UserStatus) *GetStatusOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get status o k response
func (o *GetStatusOK) SetPayload(payload *apimodel.UserStatus) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetStatusOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetStatusForbiddenCode is the HTTP code returned for type GetStatusForbidden
const GetStatusForbiddenCode int = 403

/*GetStatusForbidden error

swagger:response getStatusForbidden
*/
type GetStatusForbidden struct {

	/*
	  In: Body
	*/
	Payload *apimodel.Error `json:"body,omitempty"`
}

// NewGetStatusForbidden creates GetStatusForbidden with default headers values
func NewGetStatusForbidden() *GetStatusForbidden {

	return &GetStatusForbidden{}
}

// WithPayload adds the payload to the get status forbidden response
func (o *GetStatusForbidden) WithPayload(payload *apimodel.Error) *GetStatusForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get status forbidden response
func (o *GetStatusForbidden) SetPayload(payload *apimodel.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetStatusForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
